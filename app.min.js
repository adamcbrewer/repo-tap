var https=require("https"),http=require("http"),config=require("./config.js"),express=require("express"),fs=require("fs"),handlebars=require("handlebars"),crypto=require("crypto"),server=express(),socketServer=http.createServer(server),io=require("socket.io").listen(socketServer),md5sum=crypto.createHash("md5"),app={results:{commits:{}},init:function(e){this.socket=e;var t=config.repos.length,n=0;for(n;n<t;n++){console.log("getting: "+config.repos[n]);this.getLatest({repo:config.repos[n]})}},getLatest:function(e){e=e||{};var t=this,n=e.repo;opts={host:"api.bitbucket.org",port:443,method:"GET",path:"/1.0/repositories/"+e.repo+"/changesets?limit="+1,auth:config.auth,headers:{"content-type":"application/json"}};https.request(opts,function(e){e.setEncoding("utf8");var r="",i={};e.on("data",function(e){r+=e}).on("end",function(){t.processResults(r,n)})}).end()},processResults:function(e,t){data=JSON.parse(e);data.repo=t||null;var n=this.results.commits[t];if(n&&n.node==data.changesets[0].node)console.log("we already have the latest");else{this.results.commits[data.repo]=data.changesets[0];this.constructTemplate("partials/commit.tmpl",data)}},constructTemplate:function(e,t){var n=this.loadTemplate(e);template=handlebars.compile(n),commits=[],numCommits=t.changesets.length,i=0;for(i;i<numCommits;i++){t.changesets[i].repoName=t.repo;commits.push(template(t.changesets[i]))}this.output("all changesets",{commits:commits.reverse()})},output:function(e,t){this.socket.emit(e,{results:t})},loadTemplate:function(e){var t=fs.readFileSync("./view/"+e,"utf8",function(e,t){if(e)throw e;return t});return t}};server.listen(8888);socketServer.listen(8080);var publicDir=__dirname+"/public",assetsDir=publicDir+"/assets";server.use("/assets",express.static(assetsDir));server.get("/",function(e,t){var n=!1,r=app.loadTemplate("layout.tmpl"),i=handlebars.compile(r),s=i({stylesheets:[{href:"assets/css/reset.css"},{href:"assets/css/core.css"}],debug:n});t.send(s)});io.sockets.on("connection",function(e){e.emit("server msg",{msg:"Socket open"});var t=config.repos.length,n=0,r=1e4;setTimeout(function(){for(n;n<t;n++){console.log("getting: "+config.repos[n]);app.getLatest({repo:config.repos[n]})}},r);app.init(e)});